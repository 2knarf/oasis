cflags\
	-isystem '$builddir'/desktop/expat/include\
	-isystem '$builddir'/desktop/libffi/include\
	-I include\
	-I '$dir' \
	-I '$outdir'/include\
	-I '$srcdir'/src

build '$outdir'/wayland-version.h sed '$srcdir'/src/wayland-version.h.in ; exprs=(\
	-e s,@WAYLAND_VERSION_MAJOR@,1,\
	-e s,@WAYLAND_VERSION_MINOR@,11,\
	-e s,@WAYLAND_VERSION_MICRO@,0,\
	-e s,@WAYLAND_VERSION@,1.11.0,\
) with expr $"exprs

cc src/wayland-util.c
cc src/wayland-os.c
cc src/connection.c '||' phony/desktop/libffi/headers

exe wayland-scanner -d phony/desktop/expat/headers\
	src/^(scanner.c wayland-util.c.o)\
	'$builddir'/desktop/expat/libexpat.a

waylandproto protocol/wayland.xml\
	include/wayland-^(client server)^-protocol.h\
	src/wayland-protocol.c

hdrs=wayland-^(client-core client egl-core egl server-core server util version)^.h
for(hdr in $hdrs) build '$outdir'/include/$hdr copy '$srcdir'/src/$hdr
build '$outdir'/include/wayland-cursor.h copy '$srcdir'/cursor/wayland-cursor.h

phony headers include/^($hdrs wayland-^(cursor.h (client server)^-protocol.h))

lib libwayland-server.a -d 'phony/$dir/headers' src/^(\
	connection.c.o\
	wayland-os.c.o\
	wayland-protocol.c.o\
	wayland-server.c\
	wayland-shm.c\
	wayland-util.c.o\
	event-loop.c\
) '$builddir'/desktop/libffi/libffi.a

lib libwayland-client.a -d 'phony/$dir/headers' src/^(\
	connection.c.o\
	wayland-os.c.o\
	wayland-protocol.c.o\
	wayland-client.c\
	wayland-util.c.o\
) '$builddir'/desktop/libffi/libffi.a

fetch git
