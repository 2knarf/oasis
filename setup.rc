#!/bin/rc

flag e +

fn usage {
	echo 'usage: '$0' [-q] [dir]' >[1=2]
	exit 2
}

while(~ $1 -?) switch($1) {
	case -v
		quiet=1
		shift
	case *
		usage
}
if(! ~ $#* 0 1) usage

. ./ninja.rc

fn subgen {
	subninja '$dir'/$1/local.ninja
	gen_inputs=($gen_inputs phony/'$dir'/$1/gen)
	tree_inputs=($tree_inputs '$outdir'/$1/root.tree)
	tree_perms=($tree_perms '$outdir'/$1/root.perms)
	if(~ $recurse 1 || ! [ -f $1/local.ninja ]) @ gen $1 &
	status=()
}

fn gen {
	if(~ $dir '' .) dir=$1
	if not dir=$dir/$1

	cd $1

	tree_perms=()
	perms_inputs=()
	tree_inputs=()
	gen_inputs=()

	ifs=() { absdir=`{pwd | head -c -1} }
	{
		set dir $dir
		if(~ $dir .) set outdir '$builddir'
		if not set outdir '$builddir/$dir'

		if([ -d src ]) {
			cd src
			if(~ $dir .) set srcdir src
			if not set srcdir '$dir/src'
		}

		. $absdir/gen.rc

		build 'phony/$dir/gen' phony '$dir/local.ninja' $gen_inputs
		build '$dir/local.ninja' gen '|' setup.rc ninja.rc '$dir/gen.rc'

		if(! ~ $#tree_perms 0) {
			printf '%s\n' $tree_perms >$absdir/local.perms
			perms_inputs=($perms_inputs '$dir'/local.perms)
		}
		if(~ $#perms_inputs 0) build '$outdir/root.perms' touch
		if not build '$outdir/root.perms' cat $perms_inputs
		if(~ $#tree_inputs 0) build '$outdir/root.tree' touch
		if not build '$outdir/root.tree' cat $tree_inputs
	} >local.ninja.tmp
	mv $absdir/^(local.ninja.tmp local.ninja)

	if(! ~ $quiet 1) echo 'generated '$dir >[1=2]

	wait
}

if(! ~ $#* 0) { gen $1 ; exit }

recurse=1
@ gen .
