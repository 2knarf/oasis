#!/bin/rc

flag e +

fn usage {
	echo 'usage: '$0' [dir]' >[1=2]
	exit 2
}

. ./ninja.rc

fn subgen {
	subninja '$srcdir'/$1/local.ninja
	gen_inputs=( $gen_inputs '$outdir'/$1/gen.stamp )
	tree_inputs=( $tree_inputs '$outdir'/$1/root.tree )
	tree_perms=( $tree_perms '$outdir'/$1/root.perms )
	if(~ $recurse 1) @ gen $1 &
	status=()
}

fn gen {
	if(~ $dir '' .) dir=$1
	if not dir=$dir/$1

	cd $1

	tree_perms=()
	perms_inputs=()
	tree_inputs=()
	gen_inputs=()

	{
		set srcdir $dir
		outdir='$builddir' {
			if(! ~ $dir .) outdir=$outdir/$dir
			set outdir $outdir
		}

		ifs=() { old_pwd=`{pwd | head -c -1} }
		. ./gen.rc

		build '$outdir'/gen.stamp stamp '|' '$srcdir'/local.ninja $gen_inputs
		build '$srcdir'/local.ninja gen '|' setup.rc ninja.rc '$srcdir'/gen.rc

		if(! ~ $#tree_perms 0) {
			printf '%s\n' $tree_perms >$old_pwd/local.perms
			perms_inputs=( $perms_inputs '$srcdir'/local.perms )
		}
		if(~ $#perms_inputs 0) build '$outdir/root.perms' stamp
		if not build '$outdir/root.perms' cat $perms_inputs
		if(~ $#tree_inputs 0) build '$outdir/root.tree' stamp
		if not build '$outdir/root.tree' cat $tree_inputs
	} >local.ninja

	if(~ $recurse 1) echo 'generated '$dir >[1=2]
	status=()

	wait
}

if(! ~ $#* 0) { gen $1 ; exit }

recurse=1
@ gen .
