cflags\
	-Wno-return-type -Wno-implicit-int\
	-I '$dir' \
	-I '$srcdir' \
	-I '$outdir'

{
	toolchain host
	cflags -Wno-implicit-int -I '$outdir'
	exe mktags mktags.c
} >tools.ninja ; subninja '$dir'/tools.ninja

rule mktags '$outdir/mktags >$out.tmp && mv $out.tmp $out'
build '$outdir'/blocktags mktags '|' '$outdir'/mktags

build '$outdir'/version.c awk '$srcdir'/VERSION ; with\
	expr '''{printf "char markdown_version[] = \"%s\";\n", $$0}'''
build '$outdir'/mkdio.h sed '$srcdir'/mkdio.h.in ; exprs=(\
	-e '''4i#include <stdint.h>''' \
	-e s,@DWORD@,uint32_t,\
) with expr $"exprs

phony deps '$outdir'/^(blocktags mkdio.h)

lib libmarkdown.a -d '$dir'/deps\
	mkdio.c markdown.c dumptree.c generate.c\
	resource.c docheader.c '$outdir'/version.c toc.c css.c\
	xml.c Csio.c xmlpage.c basename.c emmatch.c\
	github_flavoured.c setup.c tags.c html5.c flags.c

exe markdown main.c pgm_options.c libmarkdown.a
file bin/markdown '$outdir'/markdown 755
man 1 markdown.1 7 markdown.7

fetch git
