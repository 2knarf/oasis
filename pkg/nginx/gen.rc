cflags=(\
	-I '$dir' \
	-I '$srcdir'/src/core\
	-I '$srcdir'/src/event\
	-I '$srcdir'/src/os/unix\
)
libs=()
deps=()
if(grep -Fxq openssl modules.txt) {
	cflags=($cflags -I '$builddir'/pkg/libressl/include)
	libs=($libs '$builddir'/pkg/libressl/^(libssl.a.d libcrypto.a.d))
	deps=($deps pkg/libressl/headers)
}
if(grep -Fxq regex modules.txt) {
	cflags=($cflags -I '$builddir'/pkg/pcre/include)
	libs=($libs '$builddir'/pkg/pcre/libpcre.a)
	deps=($deps pkg/pcre/headers)
}
if(grep -Fxq -e http_gzip_filter -e http_gunzip_filter modules.txt || grep -Fq 'NGX_ZLIB 1' ngx_auto_config.h) {
	cflags=($cflags -I '$builddir'/pkg/zlib/include)
	libs=($libs '$builddir'/pkg/zlib/libz.a)
	deps=($deps pkg/zlib/headers)
}
if(grep -Fxq http modules.txt)
	cflags=($cflags -I '$srcdir'/src/http -I '$srcdir'/src/http/modules)
if(grep -Fxq mail modules.txt)
	cflags=($cflags -I '$srcdir'/src/mail)
if(grep -Fxq stream modules.txt)
	cflags=($cflags -I '$srcdir'/src/stream)
cflags $cflags

build '$outdir'/ngx_modules.c awk '$dir'/modules.txt '|' '$dir'/^(modules.awk sources.txt) ; with\
	expr '-f $dir/modules.awk -v sources=$dir/sources.txt'
cc '$outdir'/ngx_modules.c '||' '$outdir'/fetch.stamp

srcs=src/^(\
	core/^(\
		nginx.c\
		ngx_log.c\
		ngx_palloc.c\
		ngx_array.c\
		ngx_list.c\
		ngx_hash.c\
		ngx_buf.c\
		ngx_queue.c\
		ngx_output_chain.c\
		ngx_string.c\
		ngx_parse.c\
		ngx_parse_time.c\
		ngx_inet.c\
		ngx_file.c\
		ngx_crc32.c\
		ngx_murmurhash.c\
		ngx_md5.c\
		ngx_sha1.c\
		ngx_rbtree.c\
		ngx_radix_tree.c\
		ngx_slab.c\
		ngx_times.c\
		ngx_shmtx.c\
		ngx_connection.c\
		ngx_cycle.c\
		ngx_spinlock.c\
		ngx_rwlock.c\
		ngx_cpuinfo.c\
		ngx_conf_file.c\
		ngx_module.c\
		ngx_resolver.c\
		ngx_open_file_cache.c\
		ngx_crypt.c\
		ngx_proxy_protocol.c\
		ngx_syslog.c\
	)\
	event/^(\
		ngx_event.c\
		ngx_event_timer.c\
		ngx_event_posted.c\
		ngx_event_accept.c\
		ngx_event_connect.c\
		ngx_event_pipe.c\
		modules/ngx_epoll_module.c\
	)\
	http/ngx_http_file_cache.c\
	os/unix/^(\
		ngx_time.c\
		ngx_errno.c\
		ngx_alloc.c\
		ngx_files.c\
		ngx_socket.c\
		ngx_recv.c\
		ngx_readv_chain.c\
		ngx_udp_recv.c\
		ngx_send.c\
		ngx_writev_chain.c\
		ngx_udp_send.c\
		ngx_udp_sendmsg_chain.c\
		ngx_channel.c\
		ngx_shmem.c\
		ngx_process.c\
		ngx_daemon.c\
		ngx_setaffinity.c\
		ngx_setproctitle.c\
		ngx_posix_init.c\
		ngx_user.c\
		ngx_dlopen.c\
		ngx_process_cycle.c\
		\
		ngx_linux_init.c\
		ngx_linux_sendfile_chain.c\
	)\
	`{awk -f sources.awk -v 'sources=sources.txt' modules.txt}\
)
checkstatus

phony deps $deps
exe nginx -d '$dir'/deps $srcs ngx_modules.c.o $libs
file bin/nginx '$outdir'/nginx 755
file share/nginx/mime.types '$srcdir'/conf/mime.types 644

build '$outdir'/nginx.8 sed '$srcdir'/docs/man/nginx.8 ; expr=(\
	-e 's,%%PREFIX%%,/run/nginx/,' \
	-e 's,%%PID_PATH%%,/run/nginx/nginx.pid,' \
	-e 's,%%CONF_PATH%%,/etc/nginx/nginx.conf,' \
	-e 's,%%ERROR_LOG_PATH%%,/var/log/nginx/error.log,' \
) with expr $"expr
man -d '$outdir' 8 nginx.8

fetch git
gen_inputs='$dir'/^(sources.awk sources.txt modules.txt)
