From bbaac8ed0fc40acc4349df837abed2af72276f52 Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Wed, 6 Mar 2019 00:52:01 -0800
Subject: [PATCH] Fix EOF behavior in interactive mode with history

Previously, Ctrl-D would re-process the previous line, read one
more line, then exit. This is because bc_history_line left the
buffer untouched in case of EOF, and the bc_vm_stdin loop reads the
next line before checking the `done` condition of the previous
iteration.

This fix also prevents reading passed the end of the buffer in case
the first user input is EOF, since in that case, vec->len is still
0, so (size_t)-1 is passed to bc_read_binary.
---
 src/history/history.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/history/history.c b/src/history/history.c
index e9953ed5..d575256d 100644
--- a/src/history/history.c
+++ b/src/history/history.c
@@ -1229,7 +1229,7 @@ BcStatus bc_history_line(BcHistory *h, BcVec *vec, const char *prompt) {
 	if (BC_TTYIN && !vm->history.badTerm) {
 
 		s = bc_history_raw(h, prompt);
-		if (s) return s;
+		if (s && s != BC_STATUS_EOF) return s;
 
 		bc_vec_string(vec, BC_HISTORY_BUF_LEN(h), h->buf.v);
 
-- 
2.21.0

