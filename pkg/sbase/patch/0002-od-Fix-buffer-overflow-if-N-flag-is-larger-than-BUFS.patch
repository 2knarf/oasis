From 798885ef6d44c3a6572c5e63a0ffe3471b397f3b Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Thu, 1 Dec 2016 00:59:12 -0800
Subject: [PATCH] od: Fix buffer overflow if -N flag is larger than BUFSIZ

Previously, if max was specified, od will call read with that size,
potentially overflowing buf with data read from the file.
---
 od.c | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/od.c b/od.c
index 9b83501..27a7104 100644
--- a/od.c
+++ b/od.c
@@ -129,23 +129,25 @@ od(FILE *fp, char *fname, int last)
 {
 	static unsigned char *line;
 	static size_t lineoff;
-	size_t i;
-	unsigned char buf[BUFSIZ];
 	static off_t addr;
-	size_t buflen;
+	unsigned char buf[BUFSIZ];
+	size_t i, n, size = sizeof(buf);
 
 	while (skip - addr > 0) {
-		buflen = fread(buf, 1, MIN(skip - addr, BUFSIZ), fp);
-		addr += buflen;
+		n = fread(buf, 1, MIN(skip - addr, sizeof(buf)), fp);
+		addr += n;
 		if (feof(fp) || ferror(fp))
 			return;
 	}
 	if (!line)
 		line = emalloc(linelen);
 
-	while ((buflen = fread(buf, 1, max >= 0 ?
-	                       max - (addr - skip) : BUFSIZ, fp))) {
-		for (i = 0; i < buflen; i++, addr++) {
+	for (;;) {
+		if (max >= 0)
+			size = MIN(max - (addr - skip), size);
+		if (!(n = fread(buf, 1, size, fp)))
+			break;
+		for (i = 0; i < n; i++, addr++) {
 			line[lineoff++] = buf[i];
 			if (lineoff == linelen) {
 				printline(line, lineoff, addr - lineoff + 1);
-- 
2.11.0

