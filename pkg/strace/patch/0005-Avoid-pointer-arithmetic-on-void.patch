From 3e8180da79247998e838a028112e8b86a43e8172 Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Sun, 7 Jul 2019 21:25:13 -0700
Subject: [PATCH] Avoid pointer arithmetic on `void *`

---
 src/netlink_smc_diag.c |  4 ++--
 src/print_timespec.h   |  6 ++++--
 src/sockaddr.c         |  2 +-
 src/ucopy.c            | 10 +++++-----
 4 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/src/netlink_smc_diag.c b/src/netlink_smc_diag.c
index 7d2872dc9..fd6c276cb 100644
--- a/src/netlink_smc_diag.c
+++ b/src/netlink_smc_diag.c
@@ -41,7 +41,7 @@ DECL_NETLINK_DIAG_DECODER(decode_smc_diag_req)
 	if (len >= sizeof(req)) {
 		if (!umoven_or_printaddr(tcp, addr + offset,
 					 sizeof(req) - offset,
-					 (void *) &req + offset)) {
+					 (char *) &req + offset)) {
 			PRINT_FIELD_FLAGS(req, diag_ext,
 					  smc_diag_extended_flags,
 					  "1<<SMC_DIAG_\?\?\?-1");
@@ -250,7 +250,7 @@ DECL_NETLINK_DIAG_DECODER(decode_smc_diag_msg)
 	if (len >= sizeof(msg)) {
 		if (!umoven_or_printaddr(tcp, addr + offset,
 					 sizeof(msg) - offset,
-					 (void *) &msg + offset)) {
+					 (char *) &msg + offset)) {
 			PRINT_FIELD_XVAL(msg, diag_state,
 					 smc_states, "SMC_???");
 			tprint_struct_next();
diff --git a/src/print_timespec.h b/src/print_timespec.h
index 9603a6bb6..f5f747c42 100644
--- a/src/print_timespec.h
+++ b/src/print_timespec.h
@@ -66,6 +66,8 @@ bool
 PRINT_TIMESPEC_ARRAY_DATA_SIZE(const void *arg, const unsigned int nmemb,
 			       const size_t size)
 {
+	const char *ts = arg;
+
 	if (nmemb > size / sizeof(TIMESPEC_T)) {
 		tprint_unavailable();
 		return false;
@@ -73,10 +75,10 @@ PRINT_TIMESPEC_ARRAY_DATA_SIZE(const void *arg, const unsigned int nmemb,
 
 	tprint_array_begin();
 
-	for (unsigned int i = 0; i < nmemb; i++, arg += sizeof(TIMESPEC_T)) {
+	for (unsigned int i = 0; i < nmemb; i++, ts += sizeof(TIMESPEC_T)) {
 		if (i)
 			tprint_array_next();
-		print_unaligned_timespec_t(arg);
+		print_unaligned_timespec_t(ts);
 	}
 
 	tprint_array_end();
diff --git a/src/sockaddr.c b/src/sockaddr.c
index 3da702153..9487741d6 100644
--- a/src/sockaddr.c
+++ b/src/sockaddr.c
@@ -497,7 +497,7 @@ print_sockaddr_data_ll(struct tcb *tcp, const void *const buf,
 static void
 print_sockaddr_data_raw(const void *const buf, const int addrlen)
 {
-	const char *const data = buf + SIZEOF_SA_FAMILY;
+	const char *const data = (const char *)buf + SIZEOF_SA_FAMILY;
 	const int datalen = addrlen - SIZEOF_SA_FAMILY;
 
 	tprints_field_name("sa_data");
diff --git a/src/ucopy.c b/src/ucopy.c
index 6cebb8e26..e8ca2ad5d 100644
--- a/src/ucopy.c
+++ b/src/ucopy.c
@@ -186,7 +186,7 @@ vm_read_mem(const pid_t pid, void *laddr,
 			break;
 
 		len = next_len;
-		laddr += copy_len;
+		laddr = (char *)laddr + copy_len;
 		page_start += page_size;
 		taddr = page_start;
 	}
@@ -278,7 +278,7 @@ umoven_peekdata(const int pid, kernel_ulong_t addr, unsigned int len,
 		memcpy(laddr, &u.x[residue], m);
 		residue = 0;
 		addr += sizeof(long);
-		laddr += m;
+		laddr = (char *)laddr + m;
 		nread += m;
 		len -= m;
 	}
@@ -375,10 +375,10 @@ umovestr_peekdata(const int pid, kernel_ulong_t addr, unsigned int len,
 		memcpy(laddr, &u.x[residue], m);
 		while (residue < sizeof(long))
 			if (u.x[residue++] == '\0')
-				return (laddr - orig_addr) + residue;
+				return nread + residue;
 		residue = 0;
 		addr += sizeof(long);
-		laddr += m;
+		laddr = (char *)laddr + m;
 		nread += m;
 		len -= m;
 	}
@@ -509,7 +509,7 @@ upoken_pokedata(const int pid, kernel_ulong_t addr, unsigned int len,
 
 		addr += sizeof(long);
 		nwritten += sizeof(long);
-		our_addr += sizeof(long);
+		our_addr = (char *)our_addr + sizeof(long);
 		len -= sizeof(long);
 	}
 
-- 
2.31.1

