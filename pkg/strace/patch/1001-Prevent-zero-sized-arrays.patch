diff --git a/xlat/btrfs_features_compat.h b/xlat/btrfs_features_compat.h
index d74af3154..70331b1d7 100644
--- a/xlat/btrfs_features_compat.h
+++ b/xlat/btrfs_features_compat.h
@@ -13,13 +13,14 @@ extern const struct xlat btrfs_features_compat[];
 # else
 
 static const struct xlat_data btrfs_features_compat_xdata[] = {
+ {0}
 };
 #  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
 static
 #  endif
 const struct xlat btrfs_features_compat[1] = { {
  .data = btrfs_features_compat_xdata,
- .size = ARRAY_SIZE(btrfs_features_compat_xdata),
+ .size = ARRAY_SIZE(btrfs_features_compat_xdata) - 1,
  .type = XT_NORMAL,
  .flags_mask = 0
   ,
diff --git a/xlat/mq_attr_flags.h b/xlat/mq_attr_flags.h
index 9dfbe94d8..84ec9cd3c 100644
--- a/xlat/mq_attr_flags.h
+++ b/xlat/mq_attr_flags.h
@@ -18,13 +18,14 @@ static const struct xlat_data mq_attr_flags_xdata[] = {
  #define XLAT_VAL_0 ((unsigned) (O_NONBLOCK))
  #define XLAT_STR_0 STRINGIFY(O_NONBLOCK)
 #endif
+  {0},
 };
 #  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
 static
 #  endif
 const struct xlat mq_attr_flags[1] = { {
  .data = mq_attr_flags_xdata,
- .size = ARRAY_SIZE(mq_attr_flags_xdata),
+ .size = ARRAY_SIZE(mq_attr_flags_xdata) - 1,
  .type = XT_NORMAL,
  .flags_mask = 0
 #  ifdef XLAT_VAL_0
diff --git a/xlat/sigprof_codes.h b/xlat/sigprof_codes.h
index 65614dc28..a173d59b7 100644
--- a/xlat/sigprof_codes.h
+++ b/xlat/sigprof_codes.h
@@ -18,13 +18,14 @@ static const struct xlat_data sigprof_codes_xdata[] = {
  #define XLAT_VAL_0 ((unsigned) (PROF_SIG))
  #define XLAT_STR_0 STRINGIFY(PROF_SIG)
 #endif
+  {0}
 };
 #  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
 static
 #  endif
 const struct xlat sigprof_codes[1] = { {
  .data = sigprof_codes_xdata,
- .size = ARRAY_SIZE(sigprof_codes_xdata),
+ .size = ARRAY_SIZE(sigprof_codes_xdata) - 1,
  .type = XT_NORMAL,
  .flags_mask = 0
 #  ifdef XLAT_VAL_0
diff --git a/xlat/sock_ipx_options.h b/xlat/sock_ipx_options.h
index 166d010dc..527089bc0 100644
--- a/xlat/sock_ipx_options.h
+++ b/xlat/sock_ipx_options.h
@@ -18,11 +18,12 @@ static const struct xlat_data sock_ipx_options_xdata[] = {
  #define XLAT_VAL_0 ((unsigned) (IPX_TYPE))
  #define XLAT_STR_0 STRINGIFY(IPX_TYPE)
 #endif
+  {0}
 };
 static
 const struct xlat sock_ipx_options[1] = { {
  .data = sock_ipx_options_xdata,
- .size = ARRAY_SIZE(sock_ipx_options_xdata),
+ .size = ARRAY_SIZE(sock_ipx_options_xdata) - 1,
  .type = XT_NORMAL,
  .flags_mask = 0
 #  ifdef XLAT_VAL_0
