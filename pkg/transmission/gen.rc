set orig_cflags '$cflags'
cflags\
	-D __TRANSMISSION__\
	-I '$builddir'/pkg/curl/include\
	-I '$builddir'/pkg/libevent/include\
	-I '$builddir'/pkg/libressl/include\
	-I '$builddir'/pkg/zlib/include\
	-I '$dir' \
	-I '$srcdir' \
	-I '$srcdir'/third-party\
	-I '$srcdir'/third-party/libb64\
	-I '$srcdir'/third-party/libnatpmp\
	-I '$srcdir'/third-party/libutp\
	-I pkg/libevent/src/include\
	-I include\
	-idirafter pkg/openbsd/src/sys\
	-include config.h

phony deps\
	pkg/^(curl libevent libressl zlib)^/headers\
	'$builddir'/pkg/openbsd/fetch.stamp

lib libtransmission.a -d '$dir'/deps libtransmission/^(\
	announcer.c\
	announcer-http.c\
	announcer-udp.c\
	bandwidth.c\
	bitfield.c\
	blocklist.c\
	cache.c\
	clients.c\
	completion.c\
	ConvertUTF.c\
	crypto.c\
	crypto-utils.c\
	crypto-utils-fallback.c\
	error.c\
	fdlimit.c\
	file.c\
	handshake.c\
	history.c\
	inout.c\
	list.c\
	log.c\
	magnet.c\
	makemeta.c\
	metainfo.c\
	natpmp.c\
	net.c\
	peer-io.c\
	peer-mgr.c\
	peer-msgs.c\
	platform.c\
	platform-quota.c\
	port-forwarding.c\
	ptrarray.c\
	quark.c\
	resume.c\
	rpcimpl.c\
	rpc-server.c\
	session.c\
	stats.c\
	torrent.c\
	torrent-ctor.c\
	torrent-magnet.c\
	tr-dht.c\
	tr-lpd.c\
	tr-udp.c\
	tr-utp.c\
	tr-getopt.c\
	trevent.c\
	upnp.c\
	utils.c\
	variant.c\
	variant-benc.c\
	variant-json.c\
	verify.c\
	watchdir.c\
	watchdir-generic.c\
	web.c\
	webseed.c\
	wildmat.c\
	\
	watchdir-inotify.c\
	file-posix.c\
	crypto-utils-openssl.c\
) libb64.a libdht.a libminiupnp.a libnatpmp.a libutp.a '$builddir'/pkg/^(\
	curl/libcurl.a.d\
	libevent/libevent.a\
	libressl/libcrypto.a.d\
	zlib/libz.a\
)

lib libb64.a third-party/libb64/^(cdecode.c cencode.c)
lib libdht.a third-party/dht/dht.c

{
	set cflags '$orig_cflags' \
		-D ENABLE_STRNATPMPERR
	lib libnatpmp.a third-party/libnatpmp/^(getgateway.c natpmp.c wingettimeofday.c)
} >libnatpmp.ninja ; subninja libnatpmp.ninja

{
	set cflags '$orig_cflags' \
		-D _GNU_SOURCE\
		-I '$outdir'/miniupnp\
		-idirafter pkg/openbsd/src/sys

	hdr='$outdir'/miniupnp/miniupnpcstrings.h
	build $hdr sed '$srcdir'/third-party/miniupnp/miniupnpcstrings.h.in ; with\
		expr '-e s,OS/version,Linux, -e s,version,,'

	lib libminiupnp.a -d $hdr third-party/miniupnp/^(\
		connecthostport.c\
		igd_desc_parse.c\
		minisoap.c\
		minissdpc.c\
		miniupnpc.c\
		miniwget.c\
		minixml.c\
		portlistingparse.c\
		receivedata.c\
		upnpcommands.c\
		upnpreplyparse.c\
	)
} >libminiupnp.ninja ; subninja libminiupnp.ninja

{
	set cc '$cxx'
	set cflags '$cxxflags' \
		-fno-exceptions\
		-fno-rtti\
		-ansi\
		-D POSIX\
		-I '$srcdir'/third-party/libutp

	lib libutp.a third-party/libutp/^(utp.cpp utp_utils.cpp)
} >libutp.ninja ; subninja libutp.ninja

exe transmission-daemon -d '$dir'/deps daemon/^(daemon.c daemon-posix.c) libtransmission.a.d
file bin/transmission-daemon '$outdir'/transmission-daemon 755
man -d daemon 1 transmission-daemon.1

exe transmission-remote -d '$dir'/deps daemon/remote.c libtransmission.a.d
file bin/transmission-remote '$outdir'/transmission-remote 755
man -d daemon 1 transmission-remote.1

for(tool in create edit show) {
	exe transmission-$tool -d '$dir'/deps utils/$tool.c libtransmission.a.d
	file bin/transmission-$tool '$outdir'/transmission-$tool 755
	man -d utils 1 transmission-$tool.1
}

fetch curl
