From 99d08a98c903a38ce4ca2f689feb871c1ef01a26 Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Tue, 26 Nov 2019 19:02:46 -0800
Subject: [PATCH] dev: avoid use of packed struct

---
 src/dev.c        | 15 ++++++++++++---
 src/fido/types.h |  5 ++---
 2 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/src/dev.c b/src/dev.c
index 51b9935..6049cc6 100644
--- a/src/dev.c
+++ b/src/dev.c
@@ -145,21 +145,30 @@ static int
 fido_dev_open_rx(fido_dev_t *dev, int ms)
 {
 	fido_cbor_info_t	*info = NULL;
+	uint8_t			 data[17];
 	int			 reply_len;
 	int			 r;
 
-	if ((reply_len = fido_rx(dev, CTAP_CMD_INIT, &dev->attr,
-	    sizeof(dev->attr), ms)) < 0) {
+	if ((reply_len = fido_rx(dev, CTAP_CMD_INIT, data,
+	    sizeof(data), ms)) < 0) {
 		fido_log_debug("%s: fido_rx", __func__);
 		r = FIDO_ERR_RX;
 		goto fail;
 	}
 
+	memcpy(&dev->attr.nonce, &data[0], 8);
+	memcpy(&dev->attr.cid, &data[8], 4);
+	dev->attr.protocol = data[12];
+	dev->attr.major = data[13];
+	dev->attr.minor = data[14];
+	dev->attr.build = data[15];
+	dev->attr.flags = data[16];
+
 #ifdef FIDO_FUZZ
 	dev->attr.nonce = dev->nonce;
 #endif
 
-	if ((size_t)reply_len != sizeof(dev->attr) ||
+	if ((size_t)reply_len != sizeof(data) ||
 	    dev->attr.nonce != dev->nonce) {
 		fido_log_debug("%s: invalid nonce", __func__);
 		r = FIDO_ERR_RX;
diff --git a/src/fido/types.h b/src/fido/types.h
index 5df5e36..a8ce2ec 100644
--- a/src/fido/types.h
+++ b/src/fido/types.h
@@ -194,9 +194,8 @@ typedef struct fido_dev_info {
 	fido_dev_transport_t  transport;    /* transport functions */
 } fido_dev_info_t;
 
-PACKED_TYPE(fido_ctap_info_t,
 /* defined in section 8.1.9.1.3 (CTAPHID_INIT) of the fido2 ctap spec */
-struct fido_ctap_info {
+typedef struct fido_ctap_info {
 	uint64_t nonce;    /* echoed nonce */
 	uint32_t cid;      /* channel id */
 	uint8_t  protocol; /* ctaphid protocol id */
@@ -204,7 +203,7 @@ struct fido_ctap_info {
 	uint8_t  minor;    /* minor version number */
 	uint8_t  build;    /* build version number */
 	uint8_t  flags;    /* capabilities flags; see FIDO_CAP_* */
-})
+} fido_ctap_info_t;
 
 typedef struct fido_dev {
 	uint64_t              nonce;     /* issued nonce */
-- 
2.26.1

