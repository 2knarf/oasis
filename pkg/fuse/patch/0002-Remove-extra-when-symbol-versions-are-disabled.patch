From e23b765a6419159a50d70eab4f4df6a940af699c Mon Sep 17 00:00:00 2001
From: Michael Forney <mforney@mforney.org>
Date: Mon, 17 Jun 2019 23:17:13 -0700
Subject: [PATCH] Remove extra ';' when symbol versions are disabled

---
 lib/fuse.c         | 8 ++++----
 lib/fuse_loop_mt.c | 4 ++--
 lib/fuse_misc.h    | 2 +-
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/lib/fuse.c b/lib/fuse.c
index ec6cc59..e75efcd 100755
--- a/lib/fuse.c
+++ b/lib/fuse.c
@@ -4525,7 +4525,7 @@ int fuse_loop(struct fuse *f)
 	return fuse_session_loop(f->se);
 }
 
-FUSE_SYMVER(".symver fuse_loop_mt_32,fuse_loop_mt@@FUSE_3.2");
+FUSE_SYMVER(".symver fuse_loop_mt_32,fuse_loop_mt@@FUSE_3.2")
 int fuse_loop_mt_32(struct fuse *f, struct fuse_loop_config *config)
 {
 	if (f == NULL)
@@ -4541,7 +4541,7 @@ int fuse_loop_mt_32(struct fuse *f, struct fuse_loop_config *config)
 }
 
 int fuse_loop_mt_31(struct fuse *f, int clone_fd);
-FUSE_SYMVER(".symver fuse_loop_mt_31,fuse_loop_mt@FUSE_3.0");
+FUSE_SYMVER(".symver fuse_loop_mt_31,fuse_loop_mt@FUSE_3.0")
 int fuse_loop_mt_31(struct fuse *f, int clone_fd)
 {
 	struct fuse_loop_config config;
@@ -4826,7 +4826,7 @@ void fuse_stop_cleanup_thread(struct fuse *f)
 }
 
 
-FUSE_SYMVER(".symver fuse_new_31,fuse_new@@FUSE_3.1");
+FUSE_SYMVER(".symver fuse_new_31,fuse_new@@FUSE_3.1")
 struct fuse *fuse_new_31(struct fuse_args *args,
 		      const struct fuse_operations *op,
 		      size_t op_size, void *user_data)
@@ -4980,7 +4980,7 @@ out:
 /* Emulates 3.0-style fuse_new(), which processes --help */
 struct fuse *fuse_new_30(struct fuse_args *args, const struct fuse_operations *op,
 			 size_t op_size, void *private_data);
-FUSE_SYMVER(".symver fuse_new_30,fuse_new@FUSE_3.0");
+FUSE_SYMVER(".symver fuse_new_30,fuse_new@FUSE_3.0")
 struct fuse *fuse_new_30(struct fuse_args *args,
 			 const struct fuse_operations *op,
 			 size_t op_size, void *user_data)
diff --git a/lib/fuse_loop_mt.c b/lib/fuse_loop_mt.c
index 83f1641..753a6e9 100644
--- a/lib/fuse_loop_mt.c
+++ b/lib/fuse_loop_mt.c
@@ -304,7 +304,7 @@ static void fuse_join_worker(struct fuse_mt *mt, struct fuse_worker *w)
 	free(w);
 }
 
-FUSE_SYMVER(".symver fuse_session_loop_mt_32,fuse_session_loop_mt@@FUSE_3.2");
+FUSE_SYMVER(".symver fuse_session_loop_mt_32,fuse_session_loop_mt@@FUSE_3.2")
 int fuse_session_loop_mt_32(struct fuse_session *se, struct fuse_loop_config *config)
 {
 	int err;
@@ -352,7 +352,7 @@ int fuse_session_loop_mt_32(struct fuse_session *se, struct fuse_loop_config *co
 }
 
 int fuse_session_loop_mt_31(struct fuse_session *se, int clone_fd);
-FUSE_SYMVER(".symver fuse_session_loop_mt_31,fuse_session_loop_mt@FUSE_3.0");
+FUSE_SYMVER(".symver fuse_session_loop_mt_31,fuse_session_loop_mt@FUSE_3.0")
 int fuse_session_loop_mt_31(struct fuse_session *se, int clone_fd)
 {
 	struct fuse_loop_config config;
diff --git a/lib/fuse_misc.h b/lib/fuse_misc.h
index d4b82e6..cdb1850 100644
--- a/lib/fuse_misc.h
+++ b/lib/fuse_misc.h
@@ -14,7 +14,7 @@
     - not supported on MacOSX (in MachO binary format)
 */
 #if (!defined(__UCLIBC__) && !defined(__APPLE__)) && defined(__GNUC__)
-#define FUSE_SYMVER(x) __asm__(x)
+#define FUSE_SYMVER(x) __asm__(x);
 #else
 #define FUSE_SYMVER(x)
 #endif
-- 
2.20.1

